#GeomNEW <- ggproto("GeomNEW", Geom,
#                   required_aes = <a character vector of required aesthetics>,
#                   default_aes = aes(<default values for certain aesthetics>),
#                   draw_key = <a function used to draw the key in the legend>,
#                   draw_panel = function(data, panel_scales, coord) {
#                     ## Function that returns a grid grob that will
#                     ## be plotted (this is where the real work occurs)
#                   }
#)

library(ggplot2)
library(grid)
GeomTimeline <- ggproto("GeomTimeline", Geom,
                       required_aes = c("x"),
                       non_missing_aes = c("size", "shape", "colour"),
                       default_aes = aes(y=1, shape = 19,size=1.5,colour = "black",stroke = 0.5,alpha=.2, fill=NA),
                       draw_key = draw_key_point,
                       draw_panel = function(data, panel_params, coord) {
                         ## Transform the data first
                         #size=scale_size(data$size,"char"))
                         coords <- coord$transform(data, panel_params)
                         #str(scale_size("size"))
                         ## Let's print out the structure of the 'coords' object
                         str(theme)
                         theme(legend.position="bottom")
                         #class(coords$x)
                         ## Construct a grid grob
                        tl_points<- pointsGrob(
                           x = coords$x,
                           y = coords$y,
                           default.units = "npc",
                           gp=gpar(col = alpha(coords$colour, coords$alpha),
                                   fill = alpha(coords$fill, coords$alpha),
                                   fontsize = coords$size * .pt + coords$stroke * .stroke / 2
                           ),
                           size=unit(coords$size / .pt ,"char"),
                           #size=scale_size(unit(coords$size,"char")),
                           pch = coords$shape
                         )


                        tl_line<-polylineGrob(
                                     x = unit(c(min(panel_params$x.minor), max(panel_params$x.minor)), "npc"),
                                     #y = unit(c(0, 1), "npc"),
                                     #x = coords$x,
                                     y = c(coords$y[1],coords$y[2]),
                                     id=NULL, id.lengths=NULL,
                                     default.units = "npc",
                                     arrow = NULL, name = NULL,
                                     gp=gpar(col="blue"), vp = NULL)


                        grobTree( tl_points,tl_line)
                       })


geom_timeline <- function(mapping = NULL, data = NULL, stat = "identity",
                         position = "identity", na.rm = FALSE,
                         show.legend = NA, inherit.aes = TRUE,...) {
  ggplot2::layer(
    geom = GeomTimeline, mapping = mapping,
    data = data, stat = stat, position = position,
    show.legend = show.legend, inherit.aes = inherit.aes,
    params = list(na.rm = na.rm, ...)
  )
 # theme(legend.position="bottom")

}

ggplot( data=mod2,aes(x=qdate, size = EQ_PRIMARY,colour=DEATHS)) + geom_timeline() + scale_y_continuous(limits=c(0,2),breaks=seq(0,2,1))

d<-df %>% select (COUNTRY,LABELS,qdate,EQ_PRIMARY,DEATHS) %>% filter(COUNTRY %in% c('SYRIA','ISRAEL','JORDAN') )
d<-d[complete.cases(d[,1:4]),] %>% mutate(yValue=dense_rank(COUNTRY))



mod2<-df %>% select (COUNTRY,LABELS,qdate,EQ_PRIMARY,DEATHS) %>% filter(qdate > as.Date('2000-01-01',"%Y-%m-%d") & qdate < as.Date('2017-01-01',"%Y-%m-%d") & COUNTRY=='USA')
mod2<-mod2[complete.cases(mod2[,1:4]),] %>% mutate(yValue=dense_rank(COUNTRY))
mod2<-mod2[order(-mod2$EQ_PRIMARY),]

ggplot(data = worldcup, aes(Time, Shots)) + geom_mypoint()

d[complete.cases(d[,1:5]),]
